[tool.poetry]
name = "opyni"
version = "0.1.0"
description = "Automatically generate unit tests"
authors = ["iahsanujunda"]
license = "MIT"
readme = "README.md"
keywords = [
    "unit test",
    "test generation"
]
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Education :: Testing",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
]
packages = [
    { include = "opyni", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.10"
black = "^24.4.2"
langchain = "^0.2.6"
langchain-community = "^0.2.6"
langchain-openai = "^0.1.13"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pre-commit = "^3.7.1"

[tool.black]
line-length = 88
target_version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | venv
    | _build
    | build
    | dist
    | opyni.egg-info
  )/
)
'''

[tool.pytest.ini_options]
minversion = 6.0
addopts = "-m 'not call_openai'"
testpaths = ["tests"]
markers = """
    call_openai: mark tests that call OpenAI APIs
"""

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
